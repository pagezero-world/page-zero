---
export const prerender = false;
import BaseLayout from "../../../../layouts/BaseLayout.astro";
const { id } = Astro.params;
---
<BaseLayout title="DM • Invite Adventurers">
  <section class="page-block">
    <h1>Invite Adventurers</h1>
    <p>Send email invites or share a join link.</p>

    <form class="stack" onsubmit="return false;">
      <label class="stack">
        <span>Email</span>
        <input id="inviteEmail" type="email" class="box" placeholder="adventurer@email.com" />
      </label>
      <button id="sendInvite" class="btn-outline">Send Invite</button>
    </form>

    <div class="page-block">
      <h2>Pending Invites</h2>
      <ul id="inviteList" class="stack"></ul>
    </div>
  </section>

  <script type="module" define:vars={{ id }}>
    import { dbPromise } from "../../../../lib/firebase/client.js";
    import { collection, addDoc, query, where, getDocs, serverTimestamp } from "https://www.gstatic.com/firebasejs/10.12.2/firebase-firestore.js";

    const emailEl = document.getElementById("inviteEmail");
    const sendBtn = document.getElementById("sendInvite");
    const listEl = document.getElementById("inviteList");

    async function loadInvites() {
      listEl.innerHTML = "";
      try {
        const db = await dbPromise;
        const col = collection(db, "invites");
        const q = query(col, where("campaignId", "==", id));
        const snap = await getDocs(q);
        snap.forEach(doc => {
          const d = doc.data();
          const li = document.createElement("li");
          li.className = "box";
          li.textContent = `${d?.email || "unknown"} — ${d?.status || "pending"}`;
          listEl.appendChild(li);
        });
      } catch (e) {
        console.warn("Load invites failed:", e);
      }
    }

    sendBtn?.addEventListener("click", async () => {
      const email = emailEl.value.trim();
      if (!email) return alert("Enter an email.");
      try {
        const db = await dbPromise;
        await addDoc(collection(db, "invites"), {
          campaignId: id,
          email,
          status: "pending",
          sentAt: serverTimestamp()
        });
        emailEl.value = "";
        await loadInvites();
        alert("Invite recorded. (Email delivery service can be added later.)");
      } catch (e) {
        console.error(e);
        alert("Could not send invite. Check permissions.");
      }
    });

    loadInvites();
  </script>
</BaseLayout>
